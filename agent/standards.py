import declxml as xml


def _get_xml_processor(settings):
    if settings['standard'] == 'CBERS':
        return cbers_processor
    return None


cbers_processor = xml.dictionary('root/data', [
    xml.string('productId'),
    xml.string('sceneId'),
    xml.string('satelliteId'),
    xml.string('sensorId'),
    xml.string('recStationId'),
    xml.string('productDate'),
    xml.string('productLevel'),
    xml.string('pixelSpacing'),
    xml.string('productType'),
    xml.string('sceneCount'),
    xml.string('sceneShift'),
    xml.string('overallQuality'),
    xml.string('satPath'),
    xml.string('satRow'),
    xml.string('satPathbias'),
    xml.string('satRowbias'),
    xml.string('scenePath'),
    xml.string('sceneRow'),
    xml.string('scenePathbias'),
    xml.string('sceneRowbias'),
    xml.string('direction'),
    xml.string('sunElevation'),
    xml.string('sunAzimuthElevation'),
    xml.string('sceneDate'),
    xml.string('sceneTime'),
    xml.string('instrumentMode'),
    xml.string('imagingStartTime'),
    xml.string('imagingStopTime'),
    xml.string('gain'),
    xml.string('satOffNadir'),
    xml.string('mirrorOffNadir'),
    xml.string('bands'),
    xml.string('absCalibType'),
    xml.string('mtfcProMode'),
    xml.string('radioMatricMethod'),
    xml.string('addWindow'),
    xml.string('correctPhase'),
    xml.string('reconstructProcess'),
    xml.string('earthModel'),
    xml.string('mapProjection'),
    xml.string('resampleTechnique'),
    xml.string('productOrientation'),
    xml.string('ephemerisData'),
    xml.string('attitudeData'),
    xml.string('sceneCenterLat'),
    xml.string('sceneCenterLong'),
    xml.string('zone'),
    xml.string('dataUpperLeftLat'),
    xml.string('dataUpperLeftLong'),
    xml.string('dataUpperRightLat'),
    xml.string('dataUpperRightLong'),
    xml.string('dataLowerLeftLat'),
    xml.string('dataLowerLeftLat'),
    xml.string('dataLowerRightLat'),
    xml.string('dataLowerRightLong'),
    xml.string('productUpperLeftLat'),
    xml.string('productUpperLeftLong'),
    xml.string('productUpperRightLat'),
    xml.string('productUpperRightLong'),
    xml.string('productLowerLeftLat'),
    xml.string('productLowerLeftLat'),
    xml.string('productLowerRightLat'),
    xml.string('productLowerRightLong'),
    xml.string('dataUpperLeftX'),
    xml.string('dataUpperLeftY'),
    xml.string('dataUpperRightX'),
    xml.string('dataUpperRightY'),
    xml.string('dataLowerLeftX'),
    xml.string('dataLowerLeftY'),
    xml.string('dataLowerRightX'),
    xml.string('dataLowerRightY'),
    xml.string('productUpperLeftX'),
    xml.string('productUpperLeftY'),
    xml.string('productUpperRightX'),
    xml.string('productUpperRightY'),
    xml.string('productLowerLeftX'),
    xml.string('productLowerLeftY'),
    xml.string('productLowerRightX'),
    xml.string('productLowerRightY'),
    xml.string('isSimulateData'),
    xml.string('dataFormatDes'),
    xml.string('delStatus'),
    xml.string('dataTempDir'),
    xml.string('dataArchiveDir'),
    xml.string('browseArchiveDir'),
    xml.string('browseDirectory'),
    xml.string('browseFileLocation'),
])



